# vim: set ft=gitconfig:
# .gitconfig

[include]
  path = ~/.gitconfig.local
[includeIf "gitdir:~/Repos/work/"]
  path = ~/.gitconfig.work
[includeIf "gitdir:~/work/"]
  path = ~/.gitconfig.work

[push]
  # push should only push current branch, not all branches
  default = current

[help]
  autocorrect = 1

[core]
	editor = vim
  # hooksPath = ~/.githooks

[merge]
  tool = vimdiff

[format]
  pretty = fuller

### Colors ###
[color]
  ui = auto
  interactive = auto
[color "branch"]
  current = green reverse
  local = green
  remote = red
[color "diff"]
  commit = blue bold
  meta = blue bold
  frag = blue bold
  func = blue reverse
  plain = normal
  old = red reverse
  new = green reverse
[color "status"]
  added = yellow reverse
  changed = green reverse
  untracked = normal

### Aliases ###
[alias]
  ls      = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s\\ %Cgreen(%cr)\\ %Cblue\\ [%cn]" --decorate
  last    = log -1 HEAD
  today   = log --since=midnight --color --graph \
            --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)[%an]%Creset' \
            --abbrev-commit
  week    = log --since='1 weeks ago' --color --graph \
            --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)[%an]%Creset' \
            --abbrev-commit
  yesterday = log --since yesterday --until=midnight --color --graph \
            --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)[%an]%Creset' \
            --abbrev-commit
  history = log --graph --pretty=format:'%C(yellow)%h%Creset \
            -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' \
            --abbrev-commit --date=short --date-order -n30

  rem     = remote -v

  bra     = branch -vv

  unstage = reset HEAD --
  discard = checkout --
  coh     = checkout HEAD --
  com     = checkout master

  amend   = commit --amend -s
  cos     = commit -s

  s       = status --short --branch
  st      = status
  sta     = status --short --branch --untracked-files=normal

  walk-unstaged = ! git status --short --branch --untracked-files=normal | awk '/M/ { print $2 }' | xargs -L1 vim

  tags    = tag -l

  reporoot = rev-parse --show-toplevel

  # rm-uns  = ! git status --porcelain . | grep ?? | awk '{ print $2 }' | xargs -L1 rm -rf 
  rm-uns  = ! git status --porcelain | awk '/??/ { system(\"echo rm -rf \"$2) }'
  test    = ! echo

  list    = "! g() { if [ \"${1}\" = \"-e\"  ]; then local except=\"-not -path '${2}*'\"; fi ; git status --short | awk -v excepta=\"${except}\" '{ system(\"find \"$2\" \"excepta)  }' | xargs -L 1 git st --short | uniq ; } ; g"

  set-default-upstream = "! g() { remote=\"${1:-origin}\"; branch=\"${2:-$(git rev-parse --abbrev-ref HEAD)}\"; git branch --set-upstream-to=$remote/$branch; } ; g"
